version: '3.9'

services:
  user-service:
    container_name: user-service
    depends_on:
      - mongo_db
    build:
      context: ./backend
      dockerfile: Dockerfile.user
    environment:
      DB_URI: "mongodb+srv://shivang211:Iqbh3ur55DjcxSuc@development.vy7vthu.mongodb.net/?retryWrites=true&w=majority"
      JWT_SECRET: "fa75420757c0f905d126c3b2a626c0db"
    volumes:
      - ./backend/user-service:/app/backend/user-service
    ports:
      - '8000:8000'
    networks:
      - cs3219-project-network

  history-service:
    container_name: history-service
    depends_on:
      - mongo_db
    build:
      context: ./backend
      dockerfile: Dockerfile.history
    volumes:
      - ./backend/history-service:/app/backend/history-service
    ports:
      - '8001:8001'
    environment:
      DB_URI: 'mongodb+srv://shivang211:Iqbh3ur55DjcxSuc@development.vy7vthu.mongodb.net/?retryWrites=true&w=majority'
      QUESTION_URL: 'http://question-service:8003'
    networks:
      - cs3219-project-network

  question-service:
    container_name: question-service
    depends_on:
      - mongo_db
    build:
      context: ./backend
      dockerfile: Dockerfile.question
    volumes:
      - ./backend/question-service:/app/backend/question-service
    ports:
      - '8005:8005'
    environment:
      DB_URI: mongodb://mongo_db:27017/question
    networks:
      - cs3219-project-network

  communication-service:
    container_name: communication-service
    build:
      context: ./backend
      dockerfile: Dockerfile.communication
    volumes:
      - ./backend/communication-service:/app/backend/communication-service
    ports:
      - '8003:8003'
    networks:
      - cs3219-project-network

  matching-service:
    container_name: matching-service
    depends_on:
      - question-service
    build:
      context: ./backend
      dockerfile: Dockerfile.matching
    volumes:
      - ./backend/matching-service:/app/backend/matching-service
      - /app/backend/matching-service/node_modules
    ports:
      - '8002:8002'
    environment:
      QUESTION_DIFFICULTY_URL: 'http://question-service:8003/difficulty'
    networks:
      - cs3219-project-network

  mongo_db:
    container_name: mongo_db
    image: mongo:latest
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - mongo_db:/data/db
    networks:
      - cs3219-project-network
    logging:
      driver: 'none'

volumes:
  mongo_db: {}

networks:
  cs3219-project-network:
    driver: bridge
